1.====================================================================
Устанавливаем CentOS

При установке выключаем все  приложения
оставляем только в Приложениях редакторы и в Базовой системе основу

2.========================================================================
после перезагрузки 
Если нет интернета, обновление с DVD, то делаем так:
vi /etc/yum.repos.d/CentOS-Media.repo

Устанавливаем:
enabled=1
Выходим c сохранением:
:wq

mkdir /media/cdrom
mount /dev/cdrom /media/cdrom

yum --disablerepo=\* --enablerepo=c5-media install -y gcc gcc-c++ libtermcap-devel kernel-devel newt-devel ncurses-devel mc

yum --disablerepo=\* --enablerepo=c5-media install -y httpd mod_ssl php php-cli php-pgsql postgresql postgresql-server

yum --disablerepo=\* --enablerepo=c5-media install -y unixODBC unixODBC-devel libtool-ltdl libtool-ltdl-devel

4.========================================================

mc
Распаковываем  исходники в каталог //usr/src/
libpri-1.4.11.5.tar.gz
dahdi-linux-complete-2.4.0+2.4.0.tar.gz
asterisk-1.6.2.16.tar.gz

в dahdi-linux-complete-2.4.0+2.4.0/linux/drivers/dahdi/firmware/
копируем содержимое папки "dahdi-firmware"


6.======================================================

Заходим в  /usr/src/libpri...
cd /usr/src/libpri-1.4.11.5
make
make install

Заходим в //usr/src/dahdi-linux-...
cd /usr/src/dahdi-linux-complete-2.4.0+2.4.0
make
make install
make config


7.====================================================== 

Инициализируем базу:

service postgresql initdb

запускаем сервис:

service postgresql start

создаем пользователя базы:
su - postgres
createuser -Pd asterisk

Enter name of user to add: asterisk
Enter password for new user:XXXXXX
Enter it again:XXXXXX
Shall the new role be a superuser? (y/n) n
Shall the new user be allowed to create databases? (y/n) y
Shall the new user be allowed to create more new users? (y/n) n
CREATE USER

в файле
vi /var/lib/pgsql/data/postgresql.conf
должно быть: 
listen_addresses = '*' 
max_connections = 100
port = 5432  (убираем #)

 Теперь редактируем файл
vi /var/lib/pgsql/data/pg_hba.conf
 чтобы обеспечить возможность только что созданному пользователю asterisk устанавливать соединения с сервером PostgreSQL через TCP/IP. В конце 
файла замените все под комментарием # :
local  all  asterisk                               		trust
host   all  asterisk  127.0.0.1  255.255.255.255   	md5


Создать базу данных asterisk и задать   
в качестве владельца нашего пользователя asterisk.

createdb --owner=asterisk asterisk

CREATE DATABASE
Выйдя из учетной записи postgres и вернувшись в административную 
учетную запись, перезапустите сервер PostgreSQL:

$ exit

service postgresql restart


Добавим сервис PostgreSQL в автозагрузку:

chkconfig --level 2345 postgresql on

Добавим Apache в автозагрузку:

chkconfig --level 2345 httpd on
(# chkconfig --list    - просмотр автозагрузки,)

В файлe
vi /etc/httpd/conf/httpd.conf # добавляем строку:

 
AddType application/x-httpd-php .php .html .htm

и меняем:
User apache
Group root

Для входа на сервер под паролем
добавляем строки в секцию
<Directory "/var/www/html"> 
(вместо AllowOverride None):

    AuthName "Autoinformator"
    AuthType Basic
    Require valid-user
    AuthUserFile /var/www/html/.htpasswd
    AllowOverride all

выходим:

:wq

создаем файл с паролем: 

htpasswd -bc /var/www/html/.htpasswd Имя_пользавателя Пароль

(имя - inf пароль - byajhvfnjh (информатор в анг.раскладке)

				
настроим файрвол:
Откроем файл:
vi /etc/sysconfig/iptables

Добавим строки
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 5432 -j ACCEPT

для SIP ещё нужно добавить:

-I RH-Firewall-1-INPUT -p udp --dport 5060 -j ACCEPT
-I RH-Firewall-1-INPUT -p udp --dport 10000:20000 -j ACCEPT


Выйдем
:wq

service iptables restart



проверка соединения:
psql -h 127.0.0.1 -U asterisk

или psql -d asterisk asterisk

создаем таблицу:

CREATE SEQUENCE nom_seq;
CREATE TABLE obzvon (
    nom_id integer NOT NULL DEFAULT nextval('nom_seq'), vrem char (10), spisok integer, aon integer NOT NULL DEFAULT 0,
    nomer  char (10),  summa integer, otv integer NOT NULL DEFAULT 0, norm integer NOT NULL DEFAULT 2, kol integer NOT NULL DEFAULT 0,
    PRIMARY KEY (nom_id) );

создаем индексы:

CREATE INDEX nom_idx ON Obzvon (nom_id); 
CREATE INDEX nomer_idx ON Obzvon (nomer); 
CREATE INDEX spisok_idx ON Obzvon (spisok); 


и ещё:

CREATE TABLE usersweb ( login char (16), password char (16) );

INSERT INTO usersweb(login, password) VALUES ('aleksey', 'dbnjxrf');


CREATE SEQUENCE spisok_seq;
CREATE TABLE spiski ( spisok integer NOT NULL DEFAULT nextval('spisok_seq'), 
namespis char (32), misac varchar (6), info varchar (32), splatyty varchar (32),
borg varchar (32), nomer1 varchar(16), nomer2 varchar(16), nomer3 varchar(16), d1_1 integer, d1_2 integer, d1_3 integer, d1_4 integer,
 d2_1 integer, d2_2 integer, d2_3 integer, d2_4 integer, d3_1 integer, d3_2 integer, d3_3 integer, d3_4 integer, d4_1 integer, d4_2 integer, d4_3 integer, d4_4 integer, 
d5_1 integer, d5_2 integer, d5_3 integer, d5_4 integer, d6_1 integer, d6_2 integer, d6_3 integer, d6_4 integer, d7_1 integer, d7_2 integer, d7_3 integer, d7_4 integer, PRIMARY KEY (spisok)  );



Для дачи привилегий созданному пользователю:

GRANT SELECT ON obzvon TO aleksey;		# даем привилегию SECECT на таблицу obzvon пользователю joe
GRANT SELECT ON spiski TO aleksey;
REVOKE  SELECT ON obzvon FROM joe;     # одбираем привилегию




для выхода: /q

8.=========================================================

В файле /etc/odbcinst.ini должно быть:
[PostgreSQL]
Description    = ODBC for PostgreSQL
Driver         = /usr/lib/libodbcpsql.so
Setup          = /usr/lib/libodbcpsqlS.so
FileUsage      = 1
Проверим: 
# odbcinst -q -d
[PostgreSQL]



Добавим в файл файл
vi /etc/odbc.ini

[asterisk-connector]
Description       = PostgreSQL connection to 'asterisk' database
Driver            = PostgreSQL
Database          = asterisk
Servername        = localhost
UserName          = asterisk
Password          = welcome
Port              = 5432
Protocol          = 7.4
ReadOnly          = No
RowVersioning     = No
ShowSystemTables  = No
ShowOidColumn     = No
FakeOidIndex      = No
ConnSettings      =

9.============================================================

компилим:
заходим в  /usr/src/asterisk-....

cd /usr/src/asterisk-1.6.2.16.1
make distclean
./configure --disable-xmldoc
make menuselect

Выключим все SOUND и Music packages

make install
make config 
make samples

Внесем изменения в файл res_odbc.conf:
vi /etc/asterisk/res_odbc.conf

[asterisk]
enabled => yes
dsn => asterisk-connector
username => asterisk
password => 12345
pooling => no
limit => 100
pre-connect => yes


перезагружаемся
# reboot


10.===========================================================

Настраиваем платы:

/usr/sbin/dahdi_hardware  # смотрим установленые устройства. 
/usr/sbin/dahdi_genconf -vv  # создание конфигов,
/usr/sbin/dahdi_cfg -vv  # - автоматическая конфигурация каналов.
lsmod | grep dahdi  # подгрузка модулей.
/etc/init.d/dahdi status  # просмотр статуса каналов.

 
11.===========================================================

Копируем русские звуковые файлы в /var/lib/asterisk/sounds/ru/

 Копируем диалплан - extensions.conf, а также  файл с функциями ODBC -   func_odbc.conf
 и файл регистр телефонов SIP - sip.conf и chan_dahdi.conf в каталог  //etc/asterisk/

12.===========================================================

Копируем 3 файла AGI приложения  в каталог //var/lib/asterisk/agi-bin/
делаем эти файлы исполняемыми:

chmod +x form_call.agi 
chmod +x form_timer.agi
chmod +x del.agi

Копируем содержимое папки "Html" в /var/www/html/

устанавлиаем собственника

chown -R apache /var/www/
chown -R apache /var/lib/asterisk/sounds/ru/info/


13.============================================================

В каталоге с myroot выполняем:
crontab myroot



Установка сервера FTP

yum --disablerepo=\* --enablerepo=c5-media install -y vsftpd

chkconfig --level 2345 vsftpd on

useradd -d /var/www/html -m loska

passwd loska

проверить, чтобы в файле /etc/passwd юзер loska был /sbin/nologin

Пароль для webdaw и ftp - loska22 

chown -R loska /var/www/html

разрешить доступ через ftpd к домашним директориям.

vi /etc/vsftpd/vsftpd.conf
добавить строку: 

chroot_local_user=YES

а также в новых версиях vsftpd если разрешена запись в домашний каталог добавить:

allow_writeable_chroot=YES

установка имени компьютера и настройна сети для centos 7:

hostnamectl set-hostname centos7.ck.ukrtel.com

vi /etc/sysconfig/network-scripts/ifcfg-enp4s4 
(enp4s4) - имя сетевой карты

TYPE="Ethernet"
BOOTPROTO="none"
DEFROUTE="yes"
IPV4_FAILURE_FATAL="no"
IPV6INIT="no"
NAME="enp4s4"
UUID="f0db3773-2777-4cc0-bf91-e6f3ca96a7c3"
DEVICE="enp4s4"
ONBOOT="yes"
IPADDR="10.80.15.44"
NETMASK="255.255.255.0"
GATEWAY="10.80.15.1"
DNS1="10.36.1.101"
DNS2="10.36.1.102"

:wq

для записи в файл при включенном selinux:

chcon  -R -t httpd_sys_rw_content_t /var/www/

setsebool -P httpd_enable_homedirs 1

Для открытия сокетов из PHP:

setsebool -P httpd_can_network_connect 1


setsebool -P ftp_home_dir 1
setsebool -P allow_ftpd_full_access 1
modprobe ip_conntrack_ftp 


setsebool -P httpd_disable_trans 1

Для соединения с динстанционной базой:

setsebool -P httpd_can_network_connect 1

usermod -g root apache

service httpd restart
chmod 777 /var/www/html


Запустить 
visudo

Добавить после
root    ALL=(ALL)       ALL
apache  ALL=(ALL)        NOPASSWD: ALL

Заменить 
Default  requiretty 
на 
Default !requiretty 

добавим в файл:
vi /etc/rc.local

modprobe ip_conntrack_ftp 
lsmod | grep dahdi  

# для подгрузки модулей. 

Для правильной работы с часовым поясом должно быть в файле /etc/asterisk/cdr.conf :

usegmtime=no    ; log date/time in GMT.  Default is "no"

Синхронизация времени.

Установка
yum install ntp
service ntpd restart
chkconfig --level 2345 ntpd on

Проверка:

ntpq -c peers



Названия файлов:
в /var/lib/asterisk/sounds/ru/ 3 каталога:
borg/ - основные файлы - borg_ur.alaw, borg_fiz.alaw
splatyty/ - основные файлы - splat_vidkl.alaw, splat_20ch.alaw
info/ - файлы информации - *.alaw 
